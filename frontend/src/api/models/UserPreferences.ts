/* tslint:disable */
/* eslint-disable */
/**
 * OpenStax Kinetic API
 * The Kinetic API for OpenStax.  Requests to this API should include `application/json` in the `Accept` header.  The desired API version is specified in the request URL, e.g. `[domain]/api/v1/researcher/studies`. While the API does support a default version, that version will change over time and therefore should not be used in production code! 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserPreferences
 */
export interface UserPreferences {
    /**
     * User wishes to receive email when new digital badge becomes available
     * @type {boolean}
     * @memberof UserPreferences
     */
    digitalBadgeAvailableEmail?: boolean;
    /**
     * User wishes to receive email about study availibility
     * @type {boolean}
     * @memberof UserPreferences
     */
    studyAvailableEmail?: boolean;
    /**
     * User wishes to receive email about new sessions becoming available
     * @type {boolean}
     * @memberof UserPreferences
     */
    sessionAvailableEmail?: boolean;
    /**
     * Researcher has viewed the analysis tutorial overview on the researcher analysis page
     * @type {boolean}
     * @memberof UserPreferences
     */
    hasViewedAnalysisTutorial?: boolean;
    /**
     * Learner has viewed the initial welcome message on the learner dashboard
     * @type {boolean}
     * @memberof UserPreferences
     */
    hasViewedWelcomeMessage?: boolean;
}

/**
 * Check if a given object implements the UserPreferences interface.
 */
export function instanceOfUserPreferences(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserPreferencesFromJSON(json: any): UserPreferences {
    return UserPreferencesFromJSONTyped(json, false);
}

export function UserPreferencesFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserPreferences {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'digitalBadgeAvailableEmail': !exists(json, 'digital_badge_available_email') ? undefined : json['digital_badge_available_email'],
        'studyAvailableEmail': !exists(json, 'study_available_email') ? undefined : json['study_available_email'],
        'sessionAvailableEmail': !exists(json, 'session_available_email') ? undefined : json['session_available_email'],
        'hasViewedAnalysisTutorial': !exists(json, 'has_viewed_analysis_tutorial') ? undefined : json['has_viewed_analysis_tutorial'],
        'hasViewedWelcomeMessage': !exists(json, 'has_viewed_welcome_message') ? undefined : json['has_viewed_welcome_message'],
    };
}

export function UserPreferencesToJSON(value?: UserPreferences | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'digital_badge_available_email': value.digitalBadgeAvailableEmail,
        'study_available_email': value.studyAvailableEmail,
        'session_available_email': value.sessionAvailableEmail,
        'has_viewed_analysis_tutorial': value.hasViewedAnalysisTutorial,
        'has_viewed_welcome_message': value.hasViewedWelcomeMessage,
    };
}

