/* tslint:disable */
/* eslint-disable */
/**
 * OpenStax Kinetic API
 * The Kinetic API for OpenStax.  Requests to this API should include `application/json` in the `Accept` header.  The desired API version is specified in the request URL, e.g. `[domain]/api/v1/researcher/studies`. While the API does support a default version, that version will change over time and therefore should not be used in production code! 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AnalysisRunMessage
 */
export interface AnalysisRunMessage {
    /**
     * ID of analysis run message
     * @type {number}
     * @memberof AnalysisRunMessage
     */
    readonly id?: number;
    /**
     * ID of analysis run
     * @type {number}
     * @memberof AnalysisRunMessage
     */
    readonly analysisRunId?: number;
    /**
     * The message
     * @type {string}
     * @memberof AnalysisRunMessage
     */
    message?: string;
    /**
     * Current stage of the process
     * @type {string}
     * @memberof AnalysisRunMessage
     */
    stage?: AnalysisRunMessageStageEnum;
    /**
     * Status of the stage
     * @type {string}
     * @memberof AnalysisRunMessage
     */
    level?: AnalysisRunMessageLevelEnum;
    /**
     * When was run message was created
     * @type {string}
     * @memberof AnalysisRunMessage
     */
    createdAt?: string;
}


/**
 * @export
 */
export const AnalysisRunMessageStageEnum = {
    Archive: 'archive',
    Review: 'review',
    Package: 'package',
    Run: 'run',
    Check: 'check',
    End: 'end'
} as const;
export type AnalysisRunMessageStageEnum = typeof AnalysisRunMessageStageEnum[keyof typeof AnalysisRunMessageStageEnum];

/**
 * @export
 */
export const AnalysisRunMessageLevelEnum = {
    Info: 'info',
    Error: 'error',
    Debug: 'debug'
} as const;
export type AnalysisRunMessageLevelEnum = typeof AnalysisRunMessageLevelEnum[keyof typeof AnalysisRunMessageLevelEnum];


/**
 * Check if a given object implements the AnalysisRunMessage interface.
 */
export function instanceOfAnalysisRunMessage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AnalysisRunMessageFromJSON(json: any): AnalysisRunMessage {
    return AnalysisRunMessageFromJSONTyped(json, false);
}

export function AnalysisRunMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalysisRunMessage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'analysisRunId': !exists(json, 'analysis_run_id') ? undefined : json['analysis_run_id'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'stage': !exists(json, 'stage') ? undefined : json['stage'],
        'level': !exists(json, 'level') ? undefined : json['level'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
    };
}

export function AnalysisRunMessageToJSON(value?: AnalysisRunMessage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'message': value.message,
        'stage': value.stage,
        'level': value.level,
        'created_at': value.createdAt,
    };
}

