/* tslint:disable */
/* eslint-disable */
/**
 * OpenStax Kinetic API
 * The Kinetic API for OpenStax.  Requests to this API should include `application/json` in the `Accept` header.  The desired API version is specified in the request URL, e.g. `[domain]/api/v1/researcher/studies`. While the API does support a default version, that version will change over time and therefore should not be used in production code! 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BannerNotice
 */
export interface BannerNotice {
    /**
     * The Banner ID
     * @type {number}
     * @memberof BannerNotice
     */
    id?: number;
    /**
     * The messsage to display.  Limited HTML is supported
     * @type {string}
     * @memberof BannerNotice
     */
    message?: string;
    /**
     * When the message starts to display
     * @type {string}
     * @memberof BannerNotice
     */
    startAt?: string;
    /**
     * When the message stops to display
     * @type {string}
     * @memberof BannerNotice
     */
    endAt?: string;
}

export function BannerNoticeFromJSON(json: any): BannerNotice {
    return BannerNoticeFromJSONTyped(json, false);
}

export function BannerNoticeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BannerNotice {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'startAt': !exists(json, 'start_at') ? undefined : json['start_at'],
        'endAt': !exists(json, 'end_at') ? undefined : json['end_at'],
    };
}

export function BannerNoticeToJSON(value?: BannerNotice | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'message': value.message,
        'start_at': value.startAt,
        'end_at': value.endAt,
    };
}

