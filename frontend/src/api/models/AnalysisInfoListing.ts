/* tslint:disable */
/* eslint-disable */
/**
 * OpenStax Kinetic API
 * The Kinetic API for OpenStax.  Requests to this API should include `application/json` in the `Accept` header.  The desired API version is specified in the request URL, e.g. `[domain]/api/v1/researcher/studies`. While the API does support a default version, that version will change over time and therefore should not be used in production code! 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AnalysisInfo } from './AnalysisInfo';
import {
    AnalysisInfoFromJSON,
    AnalysisInfoFromJSONTyped,
    AnalysisInfoToJSON,
} from './AnalysisInfo';

/**
 * 
 * @export
 * @interface AnalysisInfoListing
 */
export interface AnalysisInfoListing {
    /**
     * The info.
     * @type {Array<AnalysisInfo>}
     * @memberof AnalysisInfoListing
     */
    data?: Array<AnalysisInfo>;
}

/**
 * Check if a given object implements the AnalysisInfoListing interface.
 */
export function instanceOfAnalysisInfoListing(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AnalysisInfoListingFromJSON(json: any): AnalysisInfoListing {
    return AnalysisInfoListingFromJSONTyped(json, false);
}

export function AnalysisInfoListingFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalysisInfoListing {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': !exists(json, 'data') ? undefined : ((json['data'] as Array<any>).map(AnalysisInfoFromJSON)),
    };
}

export function AnalysisInfoListingToJSON(value?: AnalysisInfoListing | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': value.data === undefined ? undefined : ((value.data as Array<any>).map(AnalysisInfoToJSON)),
    };
}

