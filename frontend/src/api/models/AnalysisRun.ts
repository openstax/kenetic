/* tslint:disable */
/* eslint-disable */
/**
 * OpenStax Kinetic API
 * The Kinetic API for OpenStax.  Requests to this API should include `application/json` in the `Accept` header.  The desired API version is specified in the request URL, e.g. `[domain]/api/v1/researcher/studies`. While the API does support a default version, that version will change over time and therefore should not be used in production code! 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AnalysisRun
 */
export interface AnalysisRun {
    /**
     * Api key to use for recording progress of run
     * @type {string}
     * @memberof AnalysisRun
     */
    apiKey: string;
    /**
     * Id of Analysis
     * @type {number}
     * @memberof AnalysisRun
     */
    analysisId: number;
    /**
     * Api key to obtain analysis data
     * @type {number}
     * @memberof AnalysisRun
     */
    analysisApiKey: number;
    /**
     * has run succeeded
     * @type {boolean}
     * @memberof AnalysisRun
     */
    didSucceed?: boolean;
    /**
     * When was run started
     * @type {string}
     * @memberof AnalysisRun
     */
    startedAt?: string;
    /**
     * When was run completed
     * @type {string}
     * @memberof AnalysisRun
     */
    finshedAt?: string;
}

/**
 * Check if a given object implements the AnalysisRun interface.
 */
export function instanceOfAnalysisRun(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "apiKey" in value;
    isInstance = isInstance && "analysisId" in value;
    isInstance = isInstance && "analysisApiKey" in value;

    return isInstance;
}

export function AnalysisRunFromJSON(json: any): AnalysisRun {
    return AnalysisRunFromJSONTyped(json, false);
}

export function AnalysisRunFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalysisRun {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apiKey': json['api_key'],
        'analysisId': json['analysis_id'],
        'analysisApiKey': json['analysis_api_key'],
        'didSucceed': !exists(json, 'did_succeed') ? undefined : json['did_succeed'],
        'startedAt': !exists(json, 'started_at') ? undefined : json['started_at'],
        'finshedAt': !exists(json, 'finshed_at') ? undefined : json['finshed_at'],
    };
}

export function AnalysisRunToJSON(value?: AnalysisRun | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'api_key': value.apiKey,
        'analysis_id': value.analysisId,
        'analysis_api_key': value.analysisApiKey,
        'did_succeed': value.didSucceed,
        'started_at': value.startedAt,
        'finshed_at': value.finshedAt,
    };
}

