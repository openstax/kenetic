/* tslint:disable */
/* eslint-disable */
/**
 * OpenStax Kinetic API
 * The Kinetic API for OpenStax.  Requests to this API should include `application/json` in the `Accept` header.  The desired API version is specified in the request URL, e.g. `[domain]/api/v1/researcher/studies`. While the API does support a default version, that version will change over time and therefore should not be used in production code! 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AnalysisInfo } from './AnalysisInfo';
import {
    AnalysisInfoFromJSON,
    AnalysisInfoFromJSONTyped,
    AnalysisInfoToJSON,
} from './AnalysisInfo';
import type { ResponseExport } from './ResponseExport';
import {
    ResponseExportFromJSON,
    ResponseExportFromJSONTyped,
    ResponseExportToJSON,
} from './ResponseExport';

/**
 * 
 * @export
 * @interface AdminStudyFilesListing
 */
export interface AdminStudyFilesListing {
    /**
     * The responses for the study
     * @type {Array<ResponseExport>}
     * @memberof AdminStudyFilesListing
     */
    responses: Array<ResponseExport>;
    /**
     * The info files for the study
     * @type {Array<AnalysisInfo>}
     * @memberof AdminStudyFilesListing
     */
    infos: Array<AnalysisInfo>;
}

/**
 * Check if a given object implements the AdminStudyFilesListing interface.
 */
export function instanceOfAdminStudyFilesListing(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "responses" in value;
    isInstance = isInstance && "infos" in value;

    return isInstance;
}

export function AdminStudyFilesListingFromJSON(json: any): AdminStudyFilesListing {
    return AdminStudyFilesListingFromJSONTyped(json, false);
}

export function AdminStudyFilesListingFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminStudyFilesListing {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'responses': ((json['responses'] as Array<any>).map(ResponseExportFromJSON)),
        'infos': ((json['infos'] as Array<any>).map(AnalysisInfoFromJSON)),
    };
}

export function AdminStudyFilesListingToJSON(value?: AdminStudyFilesListing | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'responses': ((value.responses as Array<any>).map(ResponseExportToJSON)),
        'infos': ((value.infos as Array<any>).map(AnalysisInfoToJSON)),
    };
}

