/* tslint:disable */
/* eslint-disable */
/**
 * OpenStax Kinetic API
 * The Kinetic API for OpenStax.  Requests to this API should include `application/json` in the `Accept` header.  The desired API version is specified in the request URL, e.g. `[domain]/api/v1/researcher/studies`. While the API does support a default version, that version will change over time and therefore should not be used in production code! 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AnalysisInfo
 */
export interface AnalysisInfo {
    /**
     * The record ID.
     * @type {number}
     * @memberof AnalysisInfo
     */
    readonly id: number;
    /**
     * The ID of the stage
     * @type {number}
     * @memberof AnalysisInfo
     */
    readonly stageId: number;
    /**
     * when info was uploaded
     * @type {string}
     * @memberof AnalysisInfo
     */
    createdAt: string;
    /**
     * URL to download study info from
     * @type {string}
     * @memberof AnalysisInfo
     */
    url: string;
}

/**
 * Check if a given object implements the AnalysisInfo interface.
 */
export function instanceOfAnalysisInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "stageId" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "url" in value;

    return isInstance;
}

export function AnalysisInfoFromJSON(json: any): AnalysisInfo {
    return AnalysisInfoFromJSONTyped(json, false);
}

export function AnalysisInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalysisInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'stageId': json['stage_id'],
        'createdAt': json['created_at'],
        'url': json['url'],
    };
}

export function AnalysisInfoToJSON(value?: AnalysisInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created_at': value.createdAt,
        'url': value.url,
    };
}

