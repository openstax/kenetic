/* tslint:disable */
/* eslint-disable */
/**
 * OpenStax Kinetic API
 * The Kinetic API for OpenStax.  Requests to this API should include `application/json` in the `Accept` header.  The desired API version is specified in the request URL, e.g. `[domain]/api/v1/researcher/studies`. While the API does support a default version, that version will change over time and therefore should not be used in production code! 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ContactInfo
 */
export interface ContactInfo {
    /**
     * The contact info ID.
     * @type {number}
     * @memberof ContactInfo
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ContactInfo
     */
    readonly type?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactInfo
     */
    readonly value?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ContactInfo
     */
    readonly isVerified?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ContactInfo
     */
    readonly isGuessedPreferred?: boolean;
}

/**
 * Check if a given object implements the ContactInfo interface.
 */
export function instanceOfContactInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ContactInfoFromJSON(json: any): ContactInfo {
    return ContactInfoFromJSONTyped(json, false);
}

export function ContactInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContactInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'value': !exists(json, 'value') ? undefined : json['value'],
        'isVerified': !exists(json, 'is_verified') ? undefined : json['is_verified'],
        'isGuessedPreferred': !exists(json, 'is_guessed_preferred') ? undefined : json['is_guessed_preferred'],
    };
}

export function ContactInfoToJSON(value?: ContactInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
    };
}

