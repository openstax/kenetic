name: Tests

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  front-end:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: bahmutov/npm-install@v1
        with:
          working-directory: frontend
      - name: Build docker image
        run: ./frontend/docker/build
      - name: Build and run backend docker
        run: |
          docker-compose run api bundle exec rake db:migrate
          docker-compose up -d
      - name: log docker status
        run: |
          sleep 30
          docker ps -a
          docker logs labs_api_1
          curl -i http://localhost:4006/api/v0/swagger.json
          docker logs labs_api_1
      - name: Wait for api to boot
        working-directory: frontend
        run: $(npm bin)/wait-on http://localhost:4006/api/v0/swagger.json
      - name: Generate bindings
        working-directory: frontend
        run: yarn run generate-local-bindings
      - name: Check for changes in bindings
        uses: tj-actions/verify-changed-files@v7.1
        id: verify-changed-files
        with:
          files: |
             src/api
      - name: Fail if bindings changed
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          echo "Changed files: ${{ steps.verify_changed_files.outputs.changed_files }}"
          exit 1
      - name: Run lint
        working-directory: frontend
        run: yarn run lint
      - name: Run typecheck
        working-directory: frontend
        run: yarn run typecheck
      - name: Run specs
        working-directory: frontend
        run: yarn run test:ci
      - name: Shutdown docker compose
        if: always()
        run: docker-compose down

  rspec:
    timeout-minutes: 10
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Build docker image and run specs within it
        run: |
          CI_ENV=`bash <(curl -s https://codecov.io/env)`
          API_DOCKERFILE_EXT=.ci docker-compose build
          docker-compose run -T -e CI_ENV="$CI_ENV" -e ENABLE_CODECOV=1 -e CI=true api /bin/bash -c "bundle config path vendor/bundle; bundle install; bundle exec rspec"
      - name: Stop containers
        if: always()
        run: docker-compose down
