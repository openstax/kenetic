name: Tests

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  front-end:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Build docker image
        run: ./frontend/docker/build --ci
      - name: Run specs within Docker image
        run: ./frontend/docker/ci
  rspec:
    timeout-minutes: 10
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Build docker image and run specs within it
        run: |
          CI_ENV=`bash <(curl -s https://codecov.io/env)`
          API_DOCKERFILE_EXT=.ci docker-compose build
          docker-compose run -T -e CI_ENV="$CI_ENV" -e ENABLE_CODECOV=1 -e CI=true api /bin/bash -c "bundle config path vendor/bundle; bundle install; bundle exec rspec"
      - name: Stop containers
        if: always()
        run: docker-compose down
